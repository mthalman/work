@page "/"
@using WorkPortal.Models;

<div class="container">
    <ul class="nav nav-pills mb-3 text-center justify-content-center" id="pills-tab" role="tablist">
        @foreach (var pageContent in pages)
        {
            <li class="nav-item" role="presentation">
                <button class="nav-link @(pages.First() == pageContent ? " active" : "")" data-bs-toggle="pill" data-bs-target="#@pageContent.Id"
                        type="button" role="tab" aria-controls="@pageContent.Id" aria-selected="true">
                    @pageContent.Name
                </button>
            </li>
        }
    </ul>

    <div class="tab-content" id="pills-tabContent">
        @foreach (var pageContent in pages)
        {
            <div class="tab-pane fade show @(pages.First() == pageContent ? " active" : "")" id="@pageContent.Id" role="tabpanel">
                <div class="container">
                    <div class="row">

                        @foreach (var column in pageContent.Columns)
                        {
                            <div class="@($"col{column.Width}")">

                                @foreach (var contentItem in column.Items)
                                {
                                    <div class="container@(column.Items.First() != contentItem ? " mt-3" : "")">
                                        @if (contentItem is LinkGroup linkGroup)
                                        {
                                            <h2>@linkGroup.Name</h2>
                                            <div class="list-group">
                                                @foreach (var link in linkGroup.Links)
                                                {
                                                    <WorkPortal.Components.Link LinkModel="@link" />
                                                }
                                            </div>
                                        }
                                        else if (contentItem is RepoGroup repoGroup)
                                        {
                                            <div class="col">
                                                <div class="container">
                                                    <div class="row">
                                                        <div class="col">
                                                            <h2>@repoGroup.Name</h2>
                                                        </div>
                                                    </div>
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th>Name</th>
                                                                <th>Repos</th>
                                                                <th>Pipelines</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var repo in repoGroup.Repos)
                                                            {
                                                                <tr>
                                                                    <th scope="row">
                                                                        @repo.Name
                                                                    </th>
                                                                    <td>
                                                                        <div class="list-group">
                                                                            @foreach (var link in repo.RepoLinks)
                                                                            {
                                                                                <WorkPortal.Components.Link LinkModel="@link" />
                                                                            }
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="list-group">
                                                                            @foreach (var link in repo.PipelineLinks)
                                                                            {
                                                                                <WorkPortal.Components.Link LinkModel="@link" />
                                                                            }
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {

    private IEnumerable<Page>? pages;

    protected override void OnInitialized()
    {
        pages = new Page[]
        {
            new Page("Docker", new PageColumn[]
            {
                new PageColumn("-2", new ContentItem[]
                {
                    new LinkGroup("Projects", new Link[]
                    {
                        new Link(".NET", "https://github.com/orgs/dotnet/projects/58/views/1", Svgs.GitHub),
                        new Link(".NET Fx", "https://github.com/orgs/microsoft/projects/185/views/1", Svgs.GitHub)
                    }),
                    new LinkGroup("Infra", new Link[]
                    {
                        new Link("Image info",
                            "https://github.com/dotnet/versions/tree/main/build-info/docker",
                            Svgs.Files),
                        new Link("AZ Dashboard",
                            "https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/dashboard/arm/subscriptions/941d4baa-5ef2-462e-b4b1-505791294610/resourcegroups/dashboards/providers/microsoft.portal/dashboards/984a6077-522e-426d-ad75-1430a09521bc",
                            Svgs.Azure)
                    }),
                }),
                new PageColumn("", new ContentItem[]
                {
                    new RepoGroup(new Repo[]
                    {
                        new Repo("dotnet/dotnet-docker",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/dotnet-docker", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-dotnet-docker", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionScope=%5Cdotnet%5Cdotnet-docker", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Cdotnet-docker", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/docker-tools",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/docker-tools", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-docker-tools", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionScope=%5Cdotnet%5Cdocker-tools", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Cdocker-tools", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/dotnet-buildtools-prereqs-docker",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/dotnet-buildtools-prereqs-docker", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-dotnet-buildtools-prereqs-docker", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionScope=%5Cdotnet%5Cdotnet-buildtools-prereqs-docker", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Cdotnet-buildtools-prereqs-docker", Svgs.AzureDevOps)
                            }),
                        new Repo("microsoft/dotnet-framework-docker",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/microsoft/dotnet-framework-docker", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/microsoft-dotnet-framework-docker", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionScope=%5CMicrosoft%5Cdotnet-framework-docker", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5CMicrosoft%5Cdotnet-framework-docker", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/dotnet-docker-internal",
                            RepoLinks: new Link[]
                            {
                                new Link("Internal", "https://github.com/dotnet/dotnet-docker-internal/issues", Svgs.GitHub)
                            },
                            PipelineLinks: Enumerable.Empty<Link>())
                    })
                }),
                new PageColumn("-3", new ContentItem[]
                {
                    new LinkGroup("Docker Hub", new Link[]
                    {
                        new Link("dotnet repo", "https://hub.docker.com/_/microsoft-dotnet", Svgs.Docker),
                        new Link("dotnet/framework repo", "https://hub.docker.com/_/microsoft-dotnet-framework", Svgs.Docker)
                    }),
                    new LinkGroup("MAR", new Link[]
                    {
                        new Link("MAR Portal", "https://mcr.microsoft.com", Svgs.Microsoft),
                        new Link("MAR Status", "https://status-portal.mscr.io", Svgs.Microsoft),
                        new Link("mcr repo", "https://github.com/microsoft/mcr", Svgs.GitHub),
                        new Link("mcrdocs repo", "https://github.com/microsoft/mcrdocs", Svgs.GitHub)
                    })
                }),
            }),
            new Page("Source-Build", new PageColumn[]
            {
                new PageColumn("-2", new ContentItem[]
                {
                    new LinkGroup("Projects", new Link[]
                    {
                        new Link("Source-Build", "https://github.com/orgs/dotnet/projects/101", Svgs.GitHub)
                    }),
                    new LinkGroup("My Issues", new Link[]
                    {
                        new Link("Assigned",
                            "https://github.com/issues?q=is%3Aopen+is%3Aissue+assignee%3Amthalman+archived%3Afalse+repo%3Adotnet%2Fsource-build+repo%3Adotnet%2Finstaller+repo%3Adotnet%2Fdotnet+repo%3Adotnet%2Fsource-build-reference-packages+repo%3Adotnet%2Fsource-build-externals",
                            Svgs.GitHub)
                    })
                }),
                new PageColumn("", new ContentItem[]
                {
                    new RepoGroup(new Repo[]
                    {
                        new Repo("dotnet/source-build",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/source-build", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-source-build", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionId=26", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Csource-build", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/installer",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/installer", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-installer", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionId=20", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Cinstaller", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/dotnet",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/dotnet", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionId=1219&view=runs", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Csource-build-externals", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/source-build-reference-packages",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/source-build-reference-packages", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-source-build-reference-packages", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionId=106", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionId=401", Svgs.AzureDevOps)
                            }),
                        new Repo("dotnet/source-build-externals",
                            RepoLinks: new Link[]
                            {
                                new Link("Public", "https://github.com/dotnet/source-build-externals", Svgs.GitHub),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_git/dotnet-source-build-externals", Svgs.AzureDevOps)
                            },
                            PipelineLinks: new Link[]
                            {
                                new Link("Public", "https://dev.azure.com/dnceng-public/public/_build?definitionId=80", Svgs.AzureDevOps),
                                new Link("Internal", "https://dev.azure.com/dnceng/internal/_build?definitionScope=%5Cdotnet%5Csource-build", Svgs.AzureDevOps)
                            })
                    })
                })
            })
        };
    }
}
